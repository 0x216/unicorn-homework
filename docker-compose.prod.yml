services:
  nginx:
    image: nginx:1.24.0-bullseye
    ports:
      - "8000:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
    networks:
      - default
    restart: unless-stopped

  frontend:
    image: ghcr.io/${IMAGE_REPO}/frontend:latest
    ports:
      - "80:80"
    networks:
      - default
    restart: unless-stopped
    environment:
      - REACT_APP_API_URL=http://${HOST_DOMAIN}:8000/api/v1
      - NODE_ENV=production

  backend:
    image: ghcr.io/${IMAGE_REPO}/backend:latest
    command: /bin/sh -c "npm run migrate && node server.js"
    environment:
      NODE_ENV: production
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DB_HOST: postgres
      DB_PORT: ${POSTGRES_PORT}
      CORS_ORIGIN: ${CORS_ORIGIN}
    networks:
      - default
    depends_on:
      - postgres
    restart: unless-stopped

  postgres:
    image: "postgres:16.2-bullseye"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - default
    restart: unless-stopped

networks:
  default:
    driver: bridge

volumes:
  postgres-data:
