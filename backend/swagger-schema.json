{
  "swagger": "2.0",
  "info": {
    "title": "Smokelass API",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module",
    "version": "1.0.0"
  },
  "host": "localhost:8000",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "User",
      "description": "User Endpoints"
    },
    {
      "name": "Tracking",
      "description": "Tracking Endpoints"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "For accessing the secured endpoints, you must pass the JWT token in the 'Authorization' request header in the format: 'Bearer {token}'"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/users/login": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to sign in.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Login Credentials",
            "schema": {
              "$ref": "#/definitions/LoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful, JWT token returned.",
            "schema": {
              "$ref": "#/definitions/LoginSuccessResponse"
            }
          },
          "400": {
            "description": "Invalid password."
          },
          "404": {
            "description": "User not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/users/register": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to register.",
        "parameters": [
          {
            "name": "userinfo",
            "in": "body",
            "description": "User information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created successfully."
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Email already in use."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/users/update-password": {
      "patch": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to change your password.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "New and old password",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdatePasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password updated successfully."
          },
          "400": {
            "description": "Invalid password provided."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "User not found."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/users/update": {
      "put": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to change your password.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "New and old password",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdatePasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password updated successfully."
          },
          "400": {
            "description": "Invalid password provided."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "User not found."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/users/delete/{id}": {
      "delete": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to delete user (Require superuser permission).",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "User not found."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/users/me": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to get info about current user.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Current user info retrieved successfully."
          },
          "401": {
            "description": "Not authorized or token expired."
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/tracking/": {
      "get": {
        "tags": [
          "Tracking"
        ],
        "description": "Endpoint to get info about tracking.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Tracking info retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/TrackingResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Tracking or savings not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/tracking/create": {
      "post": {
        "tags": [
          "Tracking"
        ],
        "description": "Endpoint to start new tracking.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Information about daily cigarette consumption and cost.",
            "schema": {
              "$ref": "#/definitions/CreateTrackingRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Tracking created successfully.",
            "schema": {
              "$ref": "#/definitions/TrackingResponse"
            }
          },
          "400": {
            "description": "Tracking already exists"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/tracking/delete": {
      "delete": {
        "tags": [
          "Tracking"
        ],
        "description": "Endpoint to delete tracking.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Tracking deleted successfully."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Tracking not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "John Doe"
        },
        "email": {
          "type": "string",
          "example": "test@test.com"
        }
      }
    },
    "AddUser": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "required": {
          "type": "array",
          "example": [
            "name",
            "email",
            "password"
          ],
          "items": {
            "type": "string"
          }
        },
        "properties": {
          "type": "object",
          "properties": {
            "name": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "John Doe"
                }
              }
            },
            "email": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "newuser@example.com"
                }
              }
            },
            "password": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "NewPassword123!"
                }
              }
            }
          }
        }
      }
    },
    "UpdatePasswordRequest": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "properties": {
          "type": "object",
          "properties": {
            "old_password": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "oldPassword123!"
                }
              }
            },
            "new_password": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "newPassword123!"
                }
              }
            }
          }
        },
        "required": {
          "type": "array",
          "example": [
            "old_password",
            "new_password"
          ],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "LoginRequest": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "required": {
          "type": "array",
          "example": [
            "email",
            "password"
          ],
          "items": {
            "type": "string"
          }
        },
        "properties": {
          "type": "object",
          "properties": {
            "email": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "user@example.com"
                }
              }
            },
            "password": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "password123"
                }
              }
            }
          }
        }
      }
    },
    "LoginSuccessResponse": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "properties": {
          "type": "object",
          "properties": {
            "token": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxLCJpYXQiOjE1MTYyMzkwMjJ9.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                }
              }
            }
          }
        }
      }
    },
    "CreateTrackingRequest": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "required": {
          "type": "array",
          "example": [
            "cigarettesPerDay",
            "cost"
          ],
          "items": {
            "type": "string"
          }
        },
        "properties": {
          "type": "object",
          "properties": {
            "cigarettesPerDay": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "integer"
                },
                "example": {
                  "type": "number",
                  "example": 20
                }
              }
            },
            "cost": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "number"
                },
                "example": {
                  "type": "number",
                  "example": 5.5
                }
              }
            }
          }
        }
      }
    },
    "TrackingResponse": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "properties": {
          "type": "object",
          "properties": {
            "id": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "integer"
                },
                "example": {
                  "type": "number",
                  "example": 12
                }
              }
            },
            "userId": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "integer"
                },
                "example": {
                  "type": "number",
                  "example": 1
                }
              }
            },
            "createdAt": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "format": {
                  "type": "string",
                  "example": "date-time"
                },
                "example": {
                  "type": "string",
                  "example": "2024-04-01T18:16:17.967Z"
                }
              }
            },
            "updatedAt": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "format": {
                  "type": "string",
                  "example": "date-time"
                },
                "example": {
                  "type": "string",
                  "example": "2024-04-01T18:16:17.967Z"
                }
              }
            },
            "savings": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "integer"
                        },
                        "example": {
                          "type": "number",
                          "example": 12
                        }
                      }
                    },
                    "cigarettesPerDay": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "integer"
                        },
                        "example": {
                          "type": "number",
                          "example": 5
                        }
                      }
                    },
                    "cost": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        },
                        "example": {
                          "type": "number",
                          "example": 5
                        }
                      }
                    },
                    "trackingId": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "integer"
                        },
                        "example": {
                          "type": "number",
                          "example": 12
                        }
                      }
                    },
                    "createdAt": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "format": {
                          "type": "string",
                          "example": "date-time"
                        },
                        "example": {
                          "type": "string",
                          "example": "2024-04-01T18:16:17.973Z"
                        }
                      }
                    },
                    "updatedAt": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "format": {
                          "type": "string",
                          "example": "date-time"
                        },
                        "example": {
                          "type": "string",
                          "example": "2024-04-01T18:16:17.973Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}