{
	"info": {
		"_postman_id": "be0fa977-ff88-4287-93a6-4a0ffdc0667e",
		"name": "Unicorn",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33171326"
	},
	"item": [
		{
			"name": "users",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has the required field - token\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData.token).to.exist.and.to.be.a('string');",
									"});",
									"",
									"",
									"pm.test(\"Token is a non-empty string\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.token).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Token should not be empty\");",
									"});",
									"",
									"",
									"pm.test(\"Content-Type is application/json\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"  pm.expect(pm.response.responseTime).to.be.below(500);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "test@gmail.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "Password123!",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{HOST}}{{API_VERSION}}/users/login/",
							"host": [
								"{{HOST}}{{API_VERSION}}"
							],
							"path": [
								"users",
								"login",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 409\", function () {",
									"  pm.response.to.have.status(409);",
									"});",
									"",
									"",
									"pm.test(\"Response has the required field - message\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.message).to.exist.and.to.be.a('string', \"Value should be a string\");",
									"});",
									"",
									"",
									"pm.test(\"Message is a non-empty string\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData.message).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
									"});",
									"",
									"",
									"pm.test(\"Content-Type is application/json\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.equal(\"application/json\");",
									"});",
									"",
									"",
									"pm.test(\"Response time is in an acceptable range\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "test@gmail.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "Password123!",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{HOST}}{{API_VERSION}}/users/register/",
							"host": [
								"{{HOST}}{{API_VERSION}}"
							],
							"path": [
								"users",
								"register",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "getMe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"});",
									"",
									"",
									"pm.test(\"Content-Type is application/json\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
									"});",
									"",
									"",
									"pm.test(\"Email is in a valid format\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData.email).to.match(/^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwiaXNTdXBlcnVzZXIiOmZhbHNlLCJpYXQiOjE3MTE4MjI3NTQsImV4cCI6MTcxMjA4MTk1NH0.VrJu3FUiTVz_YbDlPMAiTN-O2BmbBUVj-Ubyv4eqpBA",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{HOST}}{{API_VERSION}}/users/me/",
							"host": [
								"{{HOST}}{{API_VERSION}}"
							],
							"path": [
								"users",
								"me",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "tracking",
			"item": [
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 201\", function () {",
									"  pm.response.to.have.status(201);",
									"});",
									"",
									"",
									"pm.test(\"Verify that the 'savings' object is present in the response\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.savings).to.exist;",
									"});",
									"",
									"",
									"pm.test(\"Verify that 'id' is a non-zero integer\", function() {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.id).to.exist.and.to.be.a('number');",
									"    pm.expect(responseData.id).to.be.above(0);",
									"});",
									"",
									"pm.test(\"Verify that 'userId' is a non-zero integer\", function() {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.userId).to.exist.and.to.be.a('number');",
									"    pm.expect(responseData.userId).to.be.above(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaXNTdXBlcnVzZXIiOmZhbHNlLCJpYXQiOjE3MTE5Mjg1OTMsImV4cCI6MTcxMjE4Nzc5M30.Gs1vvl30yP11KNVn9xHGDVjL5r-vy6ypqTQrKOTSJGc",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "cigarettesPerDay",
									"value": "5",
									"type": "text"
								},
								{
									"key": "cost",
									"value": "23.5",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{HOST}}{{API_VERSION}}/tracking/create/",
							"host": [
								"{{HOST}}{{API_VERSION}}"
							],
							"path": [
								"tracking",
								"create",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "get",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has the required fields\", function () {",
									"  const responseData = pm.response.json();",
									"",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.id).to.exist;",
									"  pm.expect(responseData.userId).to.exist;",
									"  pm.expect(responseData.createdAt).to.exist;",
									"  pm.expect(responseData.updatedAt).to.exist;",
									"  pm.expect(responseData.savings).to.exist;",
									"});",
									"",
									"",
									"pm.test(\"Id is a non-negative integer\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData.id).to.be.a('number');",
									"    pm.expect(responseData.id).to.be.at.least(0);",
									"});",
									"",
									"",
									"pm.test(\"UserId is a non-negative integer\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.userId).to.exist.and.to.be.a('number');",
									"    pm.expect(responseData.userId).to.be.at.least(0, \"UserId should be a non-negative integer\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaXNTdXBlcnVzZXIiOmZhbHNlLCJpYXQiOjE3MTE5Mjg1OTMsImV4cCI6MTcxMjE4Nzc5M30.Gs1vvl30yP11KNVn9xHGDVjL5r-vy6ypqTQrKOTSJGc",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{HOST}}{{API_VERSION}}/tracking/",
							"host": [
								"{{HOST}}{{API_VERSION}}"
							],
							"path": [
								"tracking",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Content-Type is application/json\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
									"});",
									"",
									"",
									"pm.test(\"Verify that the 'message' field is present in the response\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.message).to.exist;",
									"});",
									"",
									"",
									"pm.test(\"Verify that the 'message' field is a non-empty string\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.message).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
									"});",
									"",
									"",
									"pm.test(\"Verify that the 'message' field contains the expected value\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.message).to.equal(\"expected value\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaXNTdXBlcnVzZXIiOmZhbHNlLCJpYXQiOjE3MTE5Mjg1OTMsImV4cCI6MTcxMjE4Nzc5M30.Gs1vvl30yP11KNVn9xHGDVjL5r-vy6ypqTQrKOTSJGc",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{HOST}}{{API_VERSION}}/tracking/delete/",
							"host": [
								"{{HOST}}{{API_VERSION}}"
							],
							"path": [
								"tracking",
								"delete",
								""
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer"
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "HOST",
			"value": "127.0.0.1:8001",
			"type": "string"
		},
		{
			"key": "API_VERSION",
			"value": "/api/v1",
			"type": "string"
		}
	]
}